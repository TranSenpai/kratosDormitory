// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"dormitory/internal/biz"
	"dormitory/internal/conf"
	"dormitory/internal/data"
	"dormitory/internal/server"
	"dormitory/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

func wireApp(confServer *conf.Server, confData *conf.Data, logger log.Logger) (*kratos.App, func(), error) {
	data_Database := data.NewDatabaseConfig(confData)
	db, err := data.NewMySQL(data_Database)
	if err != nil {
		return nil, nil, err
	}
	iContractRepo := data.NewContractRepo(db)
	iContractBiz := biz.NewContractService(iContractRepo)
	contractService := service.NewContractService(iContractBiz)
	grpcServer := server.NewGRPCServer(confServer, contractService, logger)
	httpServer := server.NewHTTPServer(confServer, contractService, logger)
	dataData, cleanup, err := data.NewData(db, logger)
	if err != nil {
		return nil, nil, err
	}
	app, err := newAppWithData(logger, grpcServer, httpServer, dataData)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return app, func() {
		cleanup()
	}, nil
}
