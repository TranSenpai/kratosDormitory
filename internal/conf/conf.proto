syntax = "proto3";
package kratos.api;

option go_package = "dormitory/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
}

// How to config a server
// Listen IP? Port? --> address (minimum required)
// Type of connection (TCP, UNIX socket)? --> network (minimum required)
// timeout of request --> timeout (minimum required)
// Some more option (TLS, middleware)
message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string username = 2;
    string password = 3;
    string host = 4;
    string port = 5;
    string dbname = 6;
    string params = 7; // ?charset=utf8mb4&parseTime=True&loc=Local etc.
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  Database database = 1;
  Redis redis = 2;
}
